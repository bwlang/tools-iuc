<tool id="fgbio_callmolecularconsensusreads" name="fgbio CallMolecularConsensusReads" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>- calls consensus sequences from reads with the same unique molecular tag</description>
    <macros>
        <import>../macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command><![CDATA[
        ## Link input BAM file
        ln -s '$input' input.bam &&
        
        fgbio CallMolecularConsensusReads
        --input input.bam
        --output output.bam
        --min-reads $min_reads
        #if $tag:
            --tag '$tag'
        #end if
        #if $read_name_prefix:
            --read-name-prefix '$read_name_prefix'
        #end if
        #if $read_group_id:
            --read-group-id '$read_group_id'
        #end if
        #if $error_rate_pre_umi:
            --error-rate-pre-umi $error_rate_pre_umi
        #end if
        #if $error_rate_post_umi:
            --error-rate-post-umi $error_rate_post_umi
        #end if
        #if $min_input_base_quality:
            --min-input-base-quality $min_input_base_quality
        #end if
        #if $min_consensus_base_quality:
            --min-consensus-base-quality $min_consensus_base_quality
        #end if
        #if $max_reads:
            --max-reads $max_reads
        #end if
        #if $output_per_base_tags != None:
            --output-per-base-tags $output_per_base_tags
        #end if
        #if $sort_order:
            --sort-order $sort_order
        #end if
        #if $debug:
            --debug
        #end if
        #if $threads:
            --threads $threads
        #end if
        #if $consensus_call_overlapping_bases != None:
            --consensus-call-overlapping-bases $consensus_call_overlapping_bases
        #end if
        #if $rejects:
            --rejects rejects.bam
        #end if
    ]]></command>
    <inputs>
        <param name="input" type="data" format="bam,sam" label="Input BAM/SAM file"/>
        <param name="min_reads" type="integer" min="1" value="1" label="Minimum reads" help="The minimum number of reads to produce a consensus base"/>
        <param name="tag" type="text" value="MI" label="UMI tag" help="The SAM attribute with the unique molecule tag"/>
        <param name="read_name_prefix" type="text" optional="true" label="Read name prefix" help="Prefix all consensus read names"/>
        <param name="read_group_id" type="text" value="A" label="Read group ID" help="The new read group ID for all the consensus reads"/>
        <param name="error_rate_pre_umi" type="integer" min="0" max="93" value="45" label="Error rate pre-UMI" help="The Phred-scaled error rate for an error prior to the UMIs being integrated"/>
        <param name="error_rate_post_umi" type="integer" min="0" max="93" value="40" label="Error rate post-UMI" help="The Phred-scaled error rate for an error post the UMIs have been integrated"/>
        <param name="min_input_base_quality" type="integer" min="0" max="93" value="10" label="Minimum input base quality" help="Ignore bases in raw reads that have Q below this value"/>
        <param name="min_consensus_base_quality" type="integer" min="0" max="93" value="2" label="Minimum consensus base quality" help="DEPRECATED: will be removed in future versions; use FilterConsensusReads to filter consensus bases on quality instead. Mask (make 'N') consensus bases with quality less than this threshold"/>
        <param name="max_reads" type="integer" optional="true" min="1" label="Maximum reads" help="The maximum number of reads to use when building a consensus. If more than this many reads are present in a tag family, the family is randomly downsampled"/>
        <param name="output_per_base_tags" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Output per-base tags" help="If true produce tags on consensus reads that contain per-base information"/>
        <param name="sort_order" type="select" optional="true" label="Sort order" help="The sort order of the output">
            <option value="">Same as input</option>
            <option value="Coordinate">Coordinate</option>
            <option value="Queryname">Queryname</option>
            <option value="Random">Random</option>
            <option value="RandomQuery">RandomQuery</option>
            <option value="TemplateCoordinate">TemplateCoordinate</option>
            <option value="Unsorted">Unsorted</option>
            <option value="Unknown">Unknown</option>
        </param>
        <param name="debug" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Debug mode" help="Turn on debug logging"/>
        <param name="threads" type="integer" optional="true" min="1" value="1" label="Threads" help="The number of threads to use while consensus calling"/>
        <param name="consensus_call_overlapping_bases" type="boolean" truevalue="true" falsevalue="false" checked="true" label="Consensus call overlapping bases" help="Consensus call overlapping bases in mapped paired end reads"/>
        <param name="rejects" type="boolean" truevalue="true" falsevalue="false" checked="false" label="Output rejects" help="Output reads not used in consensus calling"/>
    </inputs>
    <outputs>
        <data name="output" format="bam" from_work_dir="output.bam" label="${tool.name} on ${on_string}: consensus reads"/>
        <data name="rejects_output" format="bam" from_work_dir="rejects.bam" label="${tool.name} on ${on_string}: rejected reads">
            <filter>rejects</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="test_input.bam"/>
            <param name="min_reads" value="2"/>
            <output name="output" file="test_output.bam"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**

CallMolecularConsensusReads calls consensus sequences from reads with the same unique molecular tag. Reads with the same unique molecular tag are examined base-by-base to assess the likelihood of each base in the source molecule.

**Algorithm**

The likelihood model is as follows:

1. **Base quality adjustment**: The base qualities are adjusted by incorporating a probability representing the chance of an error from the time the unique molecular tags were integrated to just prior to sequencing.

2. **Consensus calling**: For each base position, the likelihoods that an A, C, G, or T is the base for the underlying source molecule are computed by multiplying the likelihood of each read observing the base position. The base with the maximum posterior probability becomes the consensus call.

3. **Final quality adjustment**: The consensus raw base quality is modified by incorporating the probability of an error prior to integrating the unique molecular tags.

**Input Requirements**

- The tool assumes that reads with the same tag are grouped together (consecutive in the file)
- This tool calls each end of a pair independently and does not jointly call bases that overlap within a pair
- Insertion or deletion errors in the reads are not considered in the consensus model

**Key Parameters**

- **Minimum reads**: The minimum number of reads required to produce a consensus base. This parameter has a dramatic effect on both results and runtime.
- **UMI tag**: The SAM attribute containing the unique molecule tag (default: MI)
- **Error rates**: Phred-scaled error rates for errors before and after UMI integration
- **Base quality thresholds**: Minimum quality scores for input and consensus bases
- **Maximum reads**: If specified, tag families larger than this size are randomly downsampled

**Output Tags**

Consensus reads have additional optional tags:

**Single-valued per read:**
- `cD` (int): the maximum depth of raw reads at any point in the consensus read
- `cM` (int): the minimum depth of raw reads at any point in the consensus read  
- `cE` (float): the fraction of bases in raw reads disagreeing with the final consensus calls

**Per-base values:**
- `cd` (short[]): the count of bases contributing to the consensus read at each position
- `ce` (short[]): the number of bases from raw reads disagreeing with the final consensus base

**Usage Notes**

- For libraries with low duplication rates (e.g. 100-300X exome libraries), use `--min-reads=1` to retain singleton reads while making consensus reads from duplicates
- For libraries with high duplication rates, consider using `--min-reads=2` or higher to require multiple supporting reads for error correction
- It is always safe to run with `--min-reads=1` and filter later using FilterConsensusReads

**Citation**

This tool is part of the fgbio toolkit. Please cite:

Fulcrum Genomics. (2019). fgbio: Tools for working with genomic and particularly sequencing data. Available at: https://github.com/fulcrumgenomics/fgbio
    ]]></help>
    <expand macro="citations"/>
</tool>